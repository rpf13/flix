<header>
  <nav>
    <%= link_to(image_tag("logo.png"), root_path) %>
    <ul class="left">
      <li>
        <%= nav_link_to "Released", filtered_movies_path(:released) %>
        <%# instead of above line, we could also simply use movies_path
        which would actually not use our custom scope and hence no filters.
        Furthermore, nav_link_to relates to a helper method in movies_helper.rb
        in order to overwrite the legacy link_to method. It is used to underline
        the currently used link and add the css class "active to it" %>
      </li>
      <li>
        <%= nav_link_to "Upcoming", filtered_movies_path(:upcoming) %>
      </li>
      <li>
        <%= nav_link_to "Recent", filtered_movies_path(:recent) %>
      </li>
      <li>
        <%= nav_link_to "Hits", filtered_movies_path(:hits) %>
      </li>
      <li>
        <%= nav_link_to "Flops", filtered_movies_path(:flops) %>
      </li>
    </ul>
    <ul class="right">
      <% if current_user %>
        <li>
          <%= link_to current_user.name, current_user %>
          <%# current_user is the user object, which is returned via helper
          method and rails "magic" transofrms it to a link %>
        </li>
        <li>
          <%= link_to "Sign Out", session_path,
                data: { turbo_method: :delete}  %>
        </li>
        <li>
          <%= link_to "Account Settings", edit_user_path(current_user) %>
        </li>
      <% else %>  
        <li>
          <%= link_to "Sign In", signin_path, class: "button" %>
        </li>
        <li>
          <%= link_to "Sign Up", signup_path, class: "button" %>
        </li>
      <% end %>
    </ul>
  </nav>
</header>